package com.example.payroll;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
class LoadDatabase {

  private static final Logger log = LoggerFactory.getLogger(LoadDatabase.class);

  //Spring Boot will run ALL CommandLineRunner beans once the application context is loaded.
  @Bean
  CommandLineRunner initDatabase(HeroRepository heroRepository, OrderRepository orderRepository) {

      return args -> {
          log.info("Preloading " + heroRepository.save(new Hero("Superman")));
          log.info("Preloading " + heroRepository.save(new Hero("Frodo")));
          log.info("Preloading " + heroRepository.save(new Hero("Batman")));
          log.info("Preloading " + heroRepository.save(new Hero("Lara Croft")));
          log.info("Preloading " + heroRepository.save(new Hero("Myself, lol!")));
          log.info("Preloading " + heroRepository.save(new Hero("I don't know anymore")));
          log.info("Preloading " + heroRepository.save(new Hero("A kind person")));
          log.info("Preloading " + heroRepository.save(new Hero("Anyone you admire")));

          heroRepository.findAll().forEach(hero -> log.info("Preloaded " + hero));

          //Let’s update LoadDatabase to pre-load some Order​s along with the Heroes 
          //it was loading before.

          orderRepository.save(new Order("MacBook Pro", Status.COMPLETED));
          orderRepository.save(new Order("iPhone", Status.IN_PROGRESS));

          orderRepository.findAll().forEach(order -> {
              log.info("Preloaded " + order);
          });
      };
  }
}